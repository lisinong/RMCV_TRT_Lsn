cmake_minimum_required(VERSION 2.6)
project(rm)
add_definitions(-std=c++17)

option(CUDA_USE_STATIC_CUDA_RUNTIME OFF)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_BUILD_TYPE Release)

#set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set(HAS_PYTHON OFF)
set(CMAKE_PREFIX_PATH "/usr/lib/aarch64-linux-gnu")

# 如果你是不同显卡，请设置为显卡对应的号码参考这里:https://developer.nvidia.com/zh-cn/cuda-gpus#compute
set(CUDA_GEN_CODE "-gencode=arch=compute_72,code=sm_72")
set(CUDA_DIR     "/usr/local/cuda-10.2")
set(TensorRT_DIR "/usr/include/aarch64-linux-gnu")

# 因为protobuf，需要用特定版本，所以这里指定路径
set(PROTOBUF_DIR "/usr/local/include/google/protobuf")

find_package(CUDA REQUIRED)
find_package(OpenCV REQUIRED)
#find_package(TensorRT REQUIRED)

include_directories(
    ${PROJECT_SOURCE_DIR}/autoaim
    ${PROJECT_SOURCE_DIR}/thread
    ${PROJECT_SOURCE_DIR}/DaHeng
    ${OpenCV_INCLUDE_DIRS}
    ${CUDA_DIR}/include
    ${PROTOBUF_DIR}/include
    ${TensorRT_DIR}
)
include_directories("/usr/src/tensorrt/samples/common")

aux_source_directory(./autoaim SRC_FILES)
aux_source_directory(./thread SRC_FILES)
aux_source_directory(./DaHeng SRC_FILES)
aux_source_directory(./main.cpp SRC_FILES)

add_executable(rm ${SRC_FILES})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OpenCV_LIBS} pthread ${CUDA_LIBRARIES} ${TENSORRT_LIBRARY})

